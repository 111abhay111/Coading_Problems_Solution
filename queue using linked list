#   queue using linked list
class Node:
    def __init__(self,value):
        self.data=value
        self.next=None
class Queue:
    def __init__(self):
        self.front=None
        self.rear=None
    def enqueue(self,value):
        newNode=Node(value)
        if self.front==None:
            self.front=newNode
            self.rear=newNode
        else:
            self.rear.next=newNode
            self.rear=newNode
    def dequeue(self):
        if self.front==None:
            return "Empty Queue"
        else:
            self.front=self.front.next
    def traverse(self):
        if self.front==None:
            return "Empty Queue"
        else:
            curr=self.front
            print("Element present in the Queue are: ")
            while(curr!=None):
                print(curr.data)
                curr=curr.next
    def isEmpty(self):
        if self.front==None:
            return self.front==None
    def size(self):
        curr=self.temp
        count=0
        while(curr!=None):
            count+=1
            curr=curr.next
    def front_item(self):
        if self.front==None:
            return "Empty Queue"
        else:
            data=self.front.data
            return (data)
    def rear_item(self):
        if self.rear==None:
            return "Empty Queue"
        else:
            data=self.rear.data
            return (data)
q=Queue()
q.enqueue(10)
q.enqueue(20)
q.enqueue(30)
q.enqueue(40)
q.traverse()
q.dequeue()
q.traverse()
q.dequeue()
q.traverse()
q.dequeue()
q.traverse()
q.dequeue()
print(q.traverse())
print(q.front_item())
print(q.rear_item())
